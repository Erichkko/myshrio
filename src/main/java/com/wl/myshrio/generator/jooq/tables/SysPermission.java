/*
 * This file is generated by jOOQ.
*/
package com.wl.myshrio.generator.jooq.tables;


import com.wl.myshrio.generator.jooq.Indexes;
import com.wl.myshrio.generator.jooq.Keys;
import com.wl.myshrio.generator.jooq.Shrio;
import com.wl.myshrio.generator.jooq.tables.records.SysPermissionRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermission extends TableImpl<SysPermissionRecord> {

    private static final long serialVersionUID = -1628557312;

    /**
     * The reference instance of <code>shrio.sys_permission</code>
     */
    public static final SysPermission SYS_PERMISSION = new SysPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysPermissionRecord> getRecordType() {
        return SysPermissionRecord.class;
    }

    /**
     * The column <code>shrio.sys_permission.id</code>.
     */
    public final TableField<SysPermissionRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>shrio.sys_permission.name</code>. url描述
     */
    public final TableField<SysPermissionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "url描述");

    /**
     * The column <code>shrio.sys_permission.url</code>. url地址
     */
    public final TableField<SysPermissionRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(256), this, "url地址");

    /**
     * The column <code>shrio.sys_permission.requestType</code>. 请求方式
     */
    public final TableField<SysPermissionRecord, String> REQUESTTYPE = createField("requestType", org.jooq.impl.SQLDataType.VARCHAR(255), this, "请求方式");

    /**
     * The column <code>shrio.sys_permission.fatherId</code>. 上级菜单id
     */
    public final TableField<SysPermissionRecord, String> FATHERID = createField("fatherId", org.jooq.impl.SQLDataType.VARCHAR(32), this, "上级菜单id");

    /**
     * The column <code>shrio.sys_permission.sort</code>. 排序
     */
    public final TableField<SysPermissionRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER, this, "排序");

    /**
     * The column <code>shrio.sys_permission.type</code>. 类型：页面、按钮
     */
    public final TableField<SysPermissionRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "类型：页面、按钮");

    /**
     * The column <code>shrio.sys_permission.create_time</code>. 创建时间
     */
    public final TableField<SysPermissionRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "创建时间");

    /**
     * The column <code>shrio.sys_permission.update_time</code>. 修改时间
     */
    public final TableField<SysPermissionRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "修改时间");

    /**
     * The column <code>shrio.sys_permission.creater</code>. 创建人
     */
    public final TableField<SysPermissionRecord, String> CREATER = createField("creater", org.jooq.impl.SQLDataType.VARCHAR(32), this, "创建人");

    /**
     * The column <code>shrio.sys_permission.updater</code>. 修改人
     */
    public final TableField<SysPermissionRecord, String> UPDATER = createField("updater", org.jooq.impl.SQLDataType.VARCHAR(32), this, "修改人");

    /**
     * The column <code>shrio.sys_permission.iconCls</code>.
     */
    public final TableField<SysPermissionRecord, String> ICONCLS = createField("iconCls", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>shrio.sys_permission</code> table reference
     */
    public SysPermission() {
        this(DSL.name("sys_permission"), null);
    }

    /**
     * Create an aliased <code>shrio.sys_permission</code> table reference
     */
    public SysPermission(String alias) {
        this(DSL.name(alias), SYS_PERMISSION);
    }

    /**
     * Create an aliased <code>shrio.sys_permission</code> table reference
     */
    public SysPermission(Name alias) {
        this(alias, SYS_PERMISSION);
    }

    private SysPermission(Name alias, Table<SysPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysPermission(Name alias, Table<SysPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Shrio.SHRIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysPermissionRecord> getPrimaryKey() {
        return Keys.KEY_SYS_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<SysPermissionRecord>>asList(Keys.KEY_SYS_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermission as(String alias) {
        return new SysPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermission as(Name alias) {
        return new SysPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysPermission rename(String name) {
        return new SysPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysPermission rename(Name name) {
        return new SysPermission(name, null);
    }
}
